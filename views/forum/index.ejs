<head>
  <link rel="icon" type="image/png" href="/favicon.png">
  <title>Forum</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #121212 !important;
      color: #e0e0e0 !important;
      margin: 20;
    }

    .post-container {
      padding: 30px;
    }

    h1 {
      text-align: center;
      color: #ffffff;
    }

    .post {
      background-color: #1e1e1e;
      border-radius: 5px;
      margin: 20px 0;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    .post h2 {
      margin-top: 0;
      color: #ffffff;
    }

    .post p {
      font-size: 16px;
      color: #bdbdbd;
    }

    .comments .comment {
      background-color: #242424;
      border-left: 3px solid #4a90e2;
      margin-top: 10px;
      padding: 10px;
    }

    .comment p {
      margin: 5px 0;
      color: #bdbdbd;
    }

    .comment-form {
      margin-top: 15px;
    }

    .comment-form textarea {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #333;
      border-radius: 5px;
      background-color: #2a2a2a;
      color: #e0e0e0;
    }

    .comment-form button {
      background-color: #4a90e2;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
    }

    .comment-form button:hover {
      background-color: #3578b8;
    }

    #showPostFormBtn {
      background-color: #28a745;
      color: white;
      padding: 10px 20px;
      margin-left: 40px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    #showPostFormBtn:hover {
      background-color: #218838;
    }

    #postForm {
      margin: 20px 0;
      padding: 20px;
      background-color: #1e1e1e;
      border-radius: 5px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    #postForm input,
    #postForm textarea {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #333;
      border-radius: 5px;
      background-color: #2a2a2a;
      color: #e0e0e0;
    }

    #postForm button {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
    }

    #postForm button:hover {
      background-color: #218838;
    }

    .replies .reply {
      margin-left: 20px;
      border-left: 2px dashed #4a90e2;
      padding-left: 10px;
      background-color: #1a1a1a;
    }

    .show-reply-form-btn {
      background-color: #4a90e2;
      color: white;
      padding: 5px 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .show-reply-form-btn:hover {
      background-color: #3578b8;
    }

    img {
      max-width: 300px;
      height: auto;
      display: block;
    }

    /* Modal Styling */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
      background: #242424 !important;
      padding: 20px;
      border-radius: 8px;
      width: 40%;
      margin: 10% auto;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);
      position: relative;
    }

    .close {
      position: absolute;
      top: 10px;
      right: 15px;
      font-size: 20px;
      cursor: pointer;
      color: #ffffff;
    }

    input,
    textarea {
      width: 100%;
      margin: 10px 0;
      padding: 8px;
      border: 1px solid #444;
      background-color: #2a2a2a;
      color: #e0e0e0;
    }

    .edit-post-btn,
    .edit-comment-btn,
    .edit-reply-btn {
      background-color: #4a90e2;
      color: white;
      padding: 5px 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .edit-post-btn:hover,
    .edit-comment-btn:hover,
    .edit-reply-btn:hover {
      background-color: #3578b8;
    }

    .delete-post-btn,
    .delete-comment-btn,
    .delete-reply-btn {
      background-color: #dc3545;
      color: white;
      padding: 5px 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-left: 10px;
    }

    .delete-post-btn:hover,
    .delete-comment-btn:hover,
    .delete-reply-btn:hover {
      background-color: #c82333;
    }

    #editPostForm button,
    #editCommentForm button,
    #editReplyForm button {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 10px;
    }

    #editPostForm button:hover,
    #editCommentForm button:hover,
    #editReplyForm button:hover {
      background-color: #218838;
    }
  </style>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<header>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <% if (userType==='paciente' ) { %>
        <a class="navbar-brand" href="/home">AutoCare</a>
        <% } else if (userType==='medico' ) { %>
          <a class="navbar-brand">AutoCare</a>
          <% } %>
            <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
              <ul class="navbar-nav">
                <% if (userType==='paciente' ) { %>
                  <li class="nav-item"><a class="nav-link" href="/forumN">Forum</a></li>
                  <li class="nav-item"><a class="nav-link" href="/chats">Chats</a></li>
                  <li class="nav-item"><a class="nav-link" href="/inquerito">Inqueritos diarios</a>
                  </li>
                  <li class="nav-item"><a class="nav-link" href="/get_newsN">Noticias</a></li>
                  <li class="nav-item"><a class="nav-link" href="/medicsN">Médicos Disponíveis</a></li>
                  <% } else if (userType==='medico' ) { %>
                    <li class="nav-item"><a class="nav-link" href="/chats">Chats</a></li>
                    <li class="nav-item"><a class="nav-link" href="/get_inquerito">Inqueritos dos
                        pacientes</a></li>
                    <li class="nav-item"><a class="nav-link" href="/messagerequestsN">Chat
                        requests</a></li>
                    <% } else if (userType==='organizacao' ) { %>
                      <li class="nav-item"><a class="nav-link" href="/get_news">Noticias</a></li>
                      <% } else if (userType==='admin' ) { %>
                        <li class="nav-item"><a class="nav-link" href="/users">User CRUD</a>
                        </li>
                        <% } %>
                          <li class="nav-item"><a class="nav-link text-danger" href="/logout">Logout</a></li>
              </ul>
            </div>
    </div>
  </nav>
</header>
<br>
<h1>Forum</h1>
<button id="showPostFormBtn">Create New Post</button>

<div id="postForm" style="display: none;">
  <form id="createPostForm" method="POST" action="/forum/create" enctype="multipart/form-data">
    <input type="text" id="title" placeholder="Add a title..." name="title" required />
    <textarea id="content" placeholder="Add content..." name="content" required></textarea>
    <input type="file" name="image" accept="image/*" />
    <button type="submit">Submit Post</button>
  </form>
</div>

<div id="editPostModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Edit Post</h2>
    <form id="editPostForm" enctype="multipart/form-data">
      <input type="hidden" id="editPostId">
      <label for="editPostTitle">Title:</label>
      <input type="text" id="editPostTitle" name="title" required>
      <label for="editPostContent">Content:</label>
      <textarea id="editPostContent" name="content" required></textarea>
      <label for="editPostImage">Image:</label>
      <input type="file" id="editPostImage" name="image" accept="image/*">
      <button type="submit">Save Changes</button>
    </form>
  </div>
</div>

<div id="editCommentModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Edit Comment</h2>
    <form id="editCommentForm" enctype="multipart/form-data">
      <input type="hidden" id="editCommentId" name="commentId">
      <textarea id="editCommentContent" name="content" required></textarea>

      <label for="editCommentImage">Image:</label>
      <input type="file" id="editCommentImage" name="image" accept="image/*">
      <button type="submit">Save Changes</button>
    </form>
  </div>
</div>

<div id="editReplyModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Edit Reply</h2>
    <form id="editReplyForm" enctype="multipart/form-data">
      <input type="hidden" id="editReplyId" name="replyId">
      <textarea id="editReplyContent" name="content" required></textarea>
      <label for="editReplyImage">Image:</label>
      <input type="file" id="editReplyImage" name="image" accept="image/*">
      <button type="submit">Save Changes</button>
    </form>
  </div>
</div>

<div class="post-container">
  <% posts.forEach(post=> { %>
    <div class="post" id="post-<%= post._id %>">
      <h2>
        <%= post.title %>
      </h2>
      <p>
        <%= post.content %>
      </p>

      <% if (post.image) { %>
        <img src="<%= post.image %>" alt="Post Image" />
        <% } %>

          <p>By <%= post.author ? post.author.username : 'Unknown' %> on <%= new Date(post.createdAt).toLocaleString()
                %>
          </p>

          <% if (post.author && post.author._id.toString()===user._id.toString()) { %>
            <button class="edit-post-btn" data-post-id="<%= post._id %>">Edit</button>
            <button class="delete-post-btn" data-post-id="<%= post._id %>">Delete</button>
            <% } %>

              <div class="comments">
                <% post.comments.forEach(comment=> { %>
                  <div class="comment" id="comment-<%= comment._id %>">
                    <p>
                      <%= comment.content %>
                    </p>

                    <% if (comment.image) { %>
                      <img src="<%= comment.image %>" alt="Comment Image" />
                      <% } %>

                        <p>By <%= comment.author ? comment.author.username : 'Unknown' %> on <%= new
                              Date(comment.createdAt).toLocaleString() %>
                        </p>

                        <% if (comment.author && comment.author._id.toString()===user._id.toString()) { %>
                          <button class="edit-comment-btn" data-comment-id="<%= comment._id %>">Edit</button>
                          <button class="delete-comment-btn" data-comment-id="<%= comment._id %>">Delete</button>
                          <% } %>

                            <div class="replies">
                              <% comment.replies.forEach(reply=> { %>
                                <div class="reply" id="reply-<%= reply._id %>">
                                  <p>
                                    <%= reply.content %>
                                  </p>

                                  <% if (reply.image) { %>
                                    <img src="<%= reply.image %>" alt="Reply Image" />
                                    <% } %>

                                      <p>By <%= reply.author ? reply.author.username : 'Unknown' %> on <%= new
                                            Date(reply.createdAt).toLocaleString() %>
                                      </p>

                                      <% if (reply.author && reply.author._id.toString()===user._id.toString()) { %>
                                        <button class="edit-reply-btn" data-reply-id="<%= reply._id %>">Edit</button>
                                        <button class="delete-reply-btn"
                                          data-reply-id="<%= reply._id %>">Delete</button>
                                        <% } %>
                                </div>
                                <% }) %>
                            </div>



                            <button class="show-reply-form-btn" data-comment-id="<%= comment._id %>">Reply</button>
                            <form class="comment-form reply-comment-form" data-comment-id="<%= comment._id %>"
                              data-post-id="<%= post._id %>" style="display: none;" enctype="multipart/form-data">
                              <textarea name="content" placeholder="Write your reply..." required></textarea>
                              <input type="file" name="image" accept="image/*" />
                              <button type="submit">Submit Reply</button>
                            </form>
                  </div>
                  <% }) %>
              </div>

              <form class="comment-form" data-post-id="<%= post._id %>" enctype="multipart/form-data">
                <textarea name="content" placeholder="Write a comment..." required></textarea>
                <input type="file" name="image" accept="image/*" />
                <button type="submit">Submit Comment</button>
              </form>
    </div>
    <% }) %>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  document.getElementById('showPostFormBtn').addEventListener('click', function () {
    const form = document.getElementById('postForm');
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
  });

  document.getElementById('createPostForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const formData = new FormData(this);

    try {
      const response = await fetch('/forum/create', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      if (result.success) {
        location.reload();
      } else {
        alert(result.message);
      }
    } catch (err) {
      console.error('Error during submission:', err);
    }
  });

  document.querySelector('.post-container').addEventListener('submit', async function (e) {
    if (e.target.classList.contains('comment-form')) {
      e.preventDefault();

      const isReply = e.target.classList.contains('reply-comment-form');
      const postId = e.target.getAttribute('data-post-id');
      const commentId = isReply ? e.target.getAttribute('data-comment-id') : null;
      const formData = new FormData(e.target);

      const endpoint = isReply
        ? `/forum/post/${postId}/comment/${commentId}/reply`
        : `/forum/post/${postId}/comment`;

      try {
        const response = await fetch(endpoint, {
          method: 'POST',
          body: formData,
        });

        const result = await response.json();
        if (result.success) {
          location.reload();
        } else {
          alert(result.message);
        }
      } catch (err) {
        console.error('Error during submission:', err);
      }
    }
  });

  document.querySelector('.post-container').addEventListener('click', function (e) {
    if (e.target.classList.contains('show-reply-form-btn')) {
      const commentId = e.target.getAttribute('data-comment-id');
      const replyForm = document.querySelector(`.reply-comment-form[data-comment-id="${commentId}"]`);
      replyForm.style.display = replyForm.style.display === 'none' ? 'block' : 'none';
    }
  });

  document.querySelector('.post-container').addEventListener('click', async function (e) {
    if (e.target.classList.contains('delete-post-btn')) {
      const postId = e.target.getAttribute('data-post-id');
      if (confirm('Are you sure you want to delete this post?')) {
        try {
          const response = await fetch(`/forum/post/${postId}`, { method: 'DELETE' });
          const result = await response.json();
          if (result.success) {
            location.reload();
          } else {
            alert(result.message);
          }
        } catch (err) {
          console.error('Error deleting post:', err);
        }
      }
    }
  });

  document.querySelector('.post-container').addEventListener('click', async function (e) {
    if (e.target.classList.contains('delete-comment-btn')) {
      const commentId = e.target.getAttribute('data-comment-id');
      if (confirm('Are you sure you want to delete this comment?')) {
        try {
          const response = await fetch(`/forum/comment/${commentId}`, { method: 'DELETE' });
          const result = await response.json();
          if (result.success) {
            location.reload();
          } else {
            alert(result.message);
          }
        } catch (err) {
          console.error('Error deleting comment:', err);
        }
      }
    }
  });

  document.querySelector('.post-container').addEventListener('click', async function (e) {
    if (e.target.classList.contains('delete-reply-btn')) {
      const replyId = e.target.getAttribute('data-reply-id');
      if (confirm('Are you sure you want to delete this reply?')) {
        try {
          const response = await fetch(`/forum/reply/${replyId}`, { method: 'DELETE' });
          const result = await response.json();
          if (result.success) {
            location.reload();
          } else {
            alert(result.message);
          }
        } catch (err) {
          console.error('Error deleting reply:', err);
        }
      }
    }
  });

  document.querySelector('.post-container').addEventListener('click', function (e) {
    if (e.target.classList.contains('edit-post-btn')) {
      const postId = e.target.getAttribute('data-post-id');
      const postElement = document.getElementById(`post-${postId}`);
      const postTitle = postElement.querySelector('h2').innerText;
      const postContent = postElement.querySelector('p').innerText;

      document.getElementById('editPostId').value = postId;
      document.getElementById('editPostTitle').value = postTitle;
      document.getElementById('editPostContent').value = postContent;

      document.getElementById('editPostModal').style.display = 'block';
    }
  });

  document.querySelector('.post-container').addEventListener('click', function (e) {
    if (e.target.classList.contains('edit-comment-btn')) {
      const commentId = e.target.getAttribute('data-comment-id');
      const commentElement = document.getElementById(`comment-${commentId}`);
      const commentContent = commentElement.querySelector('p').innerText;

      document.getElementById('editCommentId').value = commentId;
      document.getElementById('editCommentContent').value = commentContent;

      document.getElementById('editCommentModal').style.display = 'block';
    }
  });

  document.querySelector('.post-container').addEventListener('click', function (e) {
    if (e.target.classList.contains('edit-reply-btn')) {
      const replyId = e.target.getAttribute('data-reply-id');
      const replyElement = document.getElementById(`reply-${replyId}`);
      const replyContent = replyElement.querySelector('p').innerText;

      document.getElementById('editReplyId').value = replyId;
      document.getElementById('editReplyContent').value = replyContent;

      document.getElementById('editReplyModal').style.display = 'block';
    }
  });

  document.querySelectorAll('.close').forEach(function (closeBtn) {
    closeBtn.addEventListener('click', function () {
      this.closest('.modal').style.display = 'none';
    });
  });

  window.addEventListener('click', function (e) {
    if (e.target.classList.contains('modal')) {
      e.target.style.display = 'none';
    }
  });

  document.getElementById('editPostForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const formData = new FormData(this);
    console.log(formData)
    const postId = document.getElementById('editPostId').value;

    try {
      const response = await fetch(`/forum/post/${postId}/edit`, {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      if (result.success) {
        location.reload();
      } else {
        alert(result.message);
      }
    } catch (err) {
      console.error('Error updating post:', err);
    }
  });

  document.getElementById('editCommentForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const formData = new FormData(this);
    const commentId = document.getElementById('editCommentId').value;

    try {
      const response = await fetch(`/forum/comment/${commentId}/edit`, {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      if (result.success) {
        location.reload();
      } else {
        alert(result.message);
      }
    } catch (err) {
      console.error('Error updating comment:', err);
    }
  });

  document.getElementById('editReplyForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const formData = new FormData(this);
    const replyId = document.getElementById('editReplyId').value;

    try {
      const response = await fetch(`/forum/reply/${replyId}/edit`, {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      if (result.success) {
        location.reload();
      } else {
        alert(result.message);
      }
    } catch (err) {
      console.error('Error updating reply:', err);
    }
  });
</script>